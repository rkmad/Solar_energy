pet<-data.frame(Species=c('dog', 'cat', 'dog'),weight=c(20,10,40))
pet
pet['dog'=T,]
pet['dog'=T]
pet$Species='dog'
pet
pet<-data.frame(Species=c('dog', 'cat', 'dog'),weight=c(20,10,40))
pet[pet$Species='dog,']
pet[pet$Species=='dog,']
pet[pet$Species=='dog',]
pet[pet$Species=='dog']
city = c('Seattle', 'Chicago', 'Boston', 'Houston')
temp = c(78, 74, 50, 104)
data = data.frame(city=city,temp=temp)
data
data[order(data$city, decreasing=T)]
data[order(data$temp, decreasing=T)]
data[order(data$temp, decreasing=T),]
data1<-data[order(data$temp, decreasing=T),]
str(data1)
str(data)
pet<-list(Species=c('dog', 'cat', 'dog'),weight=c(20,10,40))
pet
mean(pet[[2]])
pet[[2]]<-+2
pet
pet<-list(Species=c('dog', 'cat', 'dog'),weight=c(20,10,40))
pet[[2]]<-pet$weight+2
pet
data("iris")
iris
sapply(iris[,1:4],mean)
sapply(iris[,1:4],sd)
lapply(iris[,1:4],sd)
example(apply)
d <- outer(0:9,0:9)
fr <- table(outer(d, d, ‘-’))
plot(fr, xlab = ‘Determinant’, ylab = ‘Frequency’)
d
fr <- table(outer(d, d, ‘-’))
fr <- table(outer(d, d, '-'))
fr
plot(fr, xlab = 'Determinant', ylab = 'Frequency')
x<-c(4, "a")
x
x<-c(4, FALSE)
x
777/8888
7777/
8
7/8
knitr::opts_chunk$set(echo = TRUE)
samp<- (sapply(1:41, function(x) rbind(all_dfs[[x]][,1:2])))
all_dfs <- lapply(csv_filepaths, read.csv, stringsAsFactors = FALSE, colClasses = "character")
setwd("~/Documents/NYC_DSA/R/Rmidtermexam/R_midterm/")
csv_filenames <- list.files(path = "./data/", pattern = "*.csv")
csv_filepaths <- paste0("./data/", csv_filenames)
all_dfs <- lapply(csv_filepaths, read.csv, stringsAsFactors = FALSE, colClasses = "character")
clean_date_str <- function(datex){
if (is_empty(datex)){
"NA"
} else {
parse_date_time(datex, c("mdy", "ymd", "%Y%m%d","%m%d%Y"), tz = "US/Eastern")
}
}
test <- all_dfs[[1]]
clean_date_str(test)
library(lubridate)
library(rlang)
clean_date_str <- function(datex){
if (is_empty(datex)){
"NA"
} else {
parse_date_time(datex, c("mdy", "ymd", "%Y%m%d","%m%d%Y"), tz = "US/Eastern")
}
}
test <- all_dfs[[1]]
clean_date_str(test)
clean_date_str <- function(datex){
if (is_empty(datex)){
"NA"
} else {
parse_date_time(datex, c("mdy", "ymd", "Ymd","mdY"), tz = "US/Eastern")
}
}
test <- all_dfs[[1]]
clean_date_str(test)
shiny::runApp('Documents/NYC_DSA/R/Shiny/fightsDemo')
runApp('Documents/NYC_DSA/R/Shiny/fightsDemo')
flights <- read.csv(file = "./flights14.csv")
set(wd) = "/Users/RK/Documents/NYC_DSA/R/Shiny/flightsDemo/"
sidebarPanel(
# origin input ####
selectizeInput(inputId = "origin",
label = "Departure airport",
choices = unique(flights$origin)),
# destination input ####
selectizeInput(inputId = "dest",
label = "Arrival airport",
choices = unique(flights$dest))
),
# count ####
mainPanel(
fluidRow(
column(5, plotOutput("count")),
column(7, plotOutput("delay"))
)
)
setwd = "/Users/RK/Documents/NYC_DSA/R/Shiny/flightsDemo/"
flights <- read.csv(file = "./flights14.csv")
flights <- read.csv(file = "flights14.csv")
flights <- read.csv(file = "./flights14.csv")
flights <- read.csv(file = "flights14.csv")
knitr::opts_chunk$set(echo = TRUE)
pv51.2019 <- read_excel("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/ENERGÍA SOLAR FOTOVOLTAICA_Ayuntamiento de Madrid.xlsx", sheet = "DETALLE 2019", col_names =T, skip = 3)
library(tidyverse)
pv51.2019 <- read_excel("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/ENERGÍA SOLAR FOTOVOLTAICA_Ayuntamiento de Madrid.xlsx", sheet = "DETALLE 2019", col_names =T, skip = 3)
pv51.2019 <- read_excel("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/ENERGÍA SOLAR FOTOVOLTAICA_Ayuntamiento de Madrid.xlsx", sheet = "DETALLE 2019", col_names =T, skip = 3)
library(readxl)
pv51.2019 <- read_excel("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/ENERGÍA SOLAR FOTOVOLTAICA_Ayuntamiento de Madrid.xlsx", sheet = "DETALLE 2019", col_names =T, skip = 3)
tail(pv51.2019)
pv151.2020 <- read_excel("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/ENERGÍA SOLAR FOTOVOLTAICA_Ayuntamiento de Madrid.xlsx", sheet = "DETALLE 2020", col_names = T, skip = 3)
pv61.2019 <- pv61.2019[-2, -2]
pv61.2019 <- read_excel("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/ENERGÍA SOLAR FOTOVOLTAICA_Ayuntamiento de Madrid.xlsx", sheet = "DETALLE 2019", col_names = T, skip = 3)
pv61.2020 <- read_excel("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/ENERGÍA SOLAR FOTOVOLTAICA_Ayuntamiento de Madrid.xlsx", sheet = "DETALLE 2020", col_names = T, skip = 3)
pv61.2019 <- read_excel("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/ENERGÍA SOLAR FOTOVOLTAICA_Ayuntamiento de Madrid.xlsx", sheet = "DETALLE 2019", col_names = T, skip = 3)
pv61.2020 <- read_excel("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/ENERGÍA SOLAR FOTOVOLTAICA_Ayuntamiento de Madrid.xlsx", sheet = "DETALLE 2020", col_names = T, skip = 3)
pv61.2019 <- pv61.2019[-2, -2]
pv61.2019 <- read_excel("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/ENERGÍA SOLAR FOTOVOLTAICA_Ayuntamiento de Madrid.xlsx", sheet = "DETALLE 2019", col_names = T, skip = 3)
pv61.2019 <- pv61.2019[-(62:63), -(16:17)]
tail(pv61.2020)
pv61.2020 <- pv61.2020[-(62:63), ]
tail(pv61.2020)
tail(pv61.2019)
# join both into one table
inner_join(pv61.2019, pv61.2020, by = CENTRO)
# join both into one table
inner_join(pv61.2019, pv61.2020, by = 'CENTRO')
pv61.2019 <- read_excel("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/ENERGÍA SOLAR FOTOVOLTAICA_Ayuntamiento de Madrid.xlsx", sheet = "DETALLE 2019", col_names = T, skip = 3)
pv61.2020 <- read_excel("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/ENERGÍA SOLAR FOTOVOLTAICA_Ayuntamiento de Madrid.xlsx", sheet = "DETALLE 2020", col_names = T, skip = 3)
# remove unnecessary rows and columns
pv61.2019 <- pv61.2019[-(62:63), -(16:17)]
pv61.2020 <- pv61.2020[-(62:63), -(6:14)]
# join both into one table
inner_join(2019 = pv61.2019, 2020 = pv61.2020, by = 'CENTRO')
# join both into one table
inner_join("2019" = pv61.2019, "2020" = pv61.2020, by = 'CENTRO')
library(lubridate)
# edit column names
seq("01", 12)
months2019 <- c("01-2019", "02-2019","03-2019","04-2019","05-2019","06-2019","07-2019","08-2019","09-2019","10-2019","11-2019","12-2019")
months2020 <- c("01-2020", "02-2020","03-2020","04-2020","05-2020","06-2020","07-2020","08-2020","09-2020","10-2020","11-2020","12-2020")
pv61.2019 <- read_excel("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/ENERGÍA SOLAR FOTOVOLTAICA_Ayuntamiento de Madrid.xlsx", sheet = "DETALLE 2019", col_names(format(lubridate::parse_date_time(months2019, orders = c("m/Y")), "%m-%Y"), skip = 3))
pv61.2019 <- read_excel("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/ENERGÍA SOLAR FOTOVOLTAICA_Ayuntamiento de Madrid.xlsx", sheet = "DETALLE 2019", col_names = format(lubridate::parse_date_time(months2019, orders = c("m/Y")), "%m-%Y"), skip = 3)
pv61.2019 <- read_excel("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/ENERGÍA SOLAR FOTOVOLTAICA_Ayuntamiento de Madrid.xlsx", sheet = "DETALLE 2019", col_names =T, skip = 3)
pv61.2020 <- read_excel("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/ENERGÍA SOLAR FOTOVOLTAICA_Ayuntamiento de Madrid.xlsx", sheet = "DETALLE 2020", col_names =T, skip = 3)
pv61.2019 <- pv61.2019[-(62:63), -(16:17)]
pv61.2020 <- pv61.2020[-(62:63), -(6:14)]
colnames(pv61.2019) <- c("center", "type", "01-2019", "02-2019","03-2019","04-2019","05-2019","06-2019","07-2019","08-2019","09-2019","10-2019","11-2019","12-2019", "total")
colnames(pv61.2020) <- c("center", "type", "01-2020", "02-2020","03-2020","04-2020","05-2020","06-2020","07-2020","08-2020","09-2020","10-2020","11-2020","12-2020", "total")
colnames(pv61.2020) <- c("center", "type", "01-2020", "02-2020","03-2020", "total")
library(zoo)
as.yearmon("01-2019", "%m-%Y")
# join both into one table
inner_join(pv61.2019, pv61.2020, by = 'center', 'type)
# join both into one table
inner_join(pv61.2019, pv61.2020)
# join both into one table
inner_join(pv61.2019, pv61.2020, by = c('center', 'type'))
colnames(pv61.2019) <- c("center", "type", "01-2019", "02-2019","03-2019","04-2019","05-2019","06-2019","07-2019","08-2019","09-2019","10-2019","11-2019","12-2019", "total2019")
colnames(pv61.2020) <- c("center", "type", "01-2020", "02-2020","03-2020", "total2020")
# join both into one table
inner_join(pv61.2019, pv61.2020, by = c('center', 'type'))
# join both into one table
pv61 <- inner_join(pv61.2019, pv61.2020, by = c('center', 'type'))
gross.elec <- read.csv("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/Eurostat_Spain_2018_nrg_bal_c/nrg_bal_c_3_Data.csv", col_names = T)
gross.elec <- read.csv("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/Eurostat_Spain_2018_nrg_bal_c/nrg_bal_c_3_Data.csv", col_names = TRUE)
gross.elec <- read.csv("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/Eurostat_Spain_2018_nrg_bal_c/nrg_bal_c_3_Data.csv")
gross.elec <- read.csv("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/Eurostat_Spain_2018_nrg_bal_c/nrg_bal_c_3_Data.csv", col_types = c("c", "c", "c", "c", "c", "c", "n"))
gross.elec <- read_csv("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/Eurostat_Spain_2018_nrg_bal_c/nrg_bal_c_3_Data.csv", col_names = TRUE, col_types = c("c", "c", "c", "c", "c", "c", "n"))
gross.elec <- read_csv("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/Eurostat_Spain_2018_nrg_bal_c/nrg_bal_c_3_Data.csv", col_names = TRUE, col_types = c("c", "c", "c", "c", "c", "c", "n", "c"))
gross.elec <- read_csv("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/Eurostat_Spain_2018_nrg_bal_c/nrg_bal_c_3_Data.csv", col_names = TRUE, col_types = c(c, c, c, c, c, c, n, c))
gross.elec <- read_csv("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/Eurostat_Spain_2018_nrg_bal_c/nrg_bal_c_3_Data.csv", col_names = TRUE, col_types = ccccccnc)
gross.elec <- read_csv("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/Eurostat_Spain_2018_nrg_bal_c/nrg_bal_c_3_Data.csv", col_names = TRUE, col_types = 'ccccccnc')
problems(...)
problems()
problems(gross.elec)
gross.elec
gross.elec <- read_csv("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/Eurostat_Spain_2018_nrg_bal_c/nrg_bal_c_3_Data.csv", col_names = TRUE, col_types = 'cccccccc')
# edit number column to eliminate spaces
gsub (" ", "", gross.elec[ ,7])
# edit number column to eliminate spaces
gsub ("\ ", "", gross.elec[ ,7])
# Madrid 61 building test set, PV solar kWh generation data by month across 2019-2020 ####
library(tidyverse)
# edit number column to eliminate spaces
gsub (" ", "", gross.elec[ ,7], fixed = T)
# edit number column to eliminate spaces
gsub (" ", "&", gross.elec[ ,7], fixed = T)
gross.elec <- read_csv("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/Eurostat_Spain_2018_nrg_bal_c/nrg_bal_c_3_Data.csv", col_names = TRUE, col_types = 'cccccccc', trim_ws = TRUE)
# edit number column to eliminate spaces
gsub (" ", "", gross.elec[ ,7], fixed = T)
# edit number column to eliminate spaces
gsub(" ", "", gross.elec[ ,7], fixed = T)
# edit number column to eliminate spaces
gsub(" ", "", gross.elec[1 ,7], fixed = T)
gross.elec [ ,7] <- as.number(gsub(" ", "", gross.elec[  ,7], fixed = T))
# edit number column to eliminate spaces
gross.elec [ ,7] <- as.numeric(gsub(" ", "", gross.elec[  ,7], fixed = T))
# edit number column to eliminate spaces
gross.elec [ ,7] <- gsub(" ", "", gross.elec[  ,7], fixed = T)
gross.elec <- read_csv("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/Eurostat_Spain_2018_nrg_bal_c/nrg_bal_c_3_Data.csv", col_names = TRUE, col_types = 'cccccccc', trim_ws = TRUE)
# edit number column to eliminate spaces
gross.elec [ ,7] <- gsub(c(" ", ":"), "", gross.elec[  ,7], fixed = T)
gsub(":", "NA", gross.elec[  ,7], fixed = T)
gsub("[[:blank:]]", "", gross.elec[  ,7])
gross.elec <- read_csv("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/Eurostat_Spain_2018_nrg_bal_c/nrg_bal_c_3_Data.csv", col_names = TRUE, col_types = 'cccccccc', trim_ws = TRUE)
gsub("[[:blank:]]", "", gross.elec[  ,7])
gross.elec [ ,7] <- gsub("[[:blank:]:]", "", gross.elec[  ,7])
gross.elec <- read_csv("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/Eurostat_Spain_2018_nrg_bal_c/nrg_bal_c_3_Data.csv", col_names = TRUE, col_types = 'cccccccc', trim_ws = TRUE)
gsub("[[:blank:]:]", "", gross.elec[  ,7])
gross.elec [ ,7] <-
gsub("[:]", "", gross.elec[  ,7])
gross.elec <- read_csv("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/Eurostat_Spain_2018_nrg_bal_c/nrg_bal_c_3_Data.csv", col_names = TRUE, col_types = 'cccccccc', trim_ws = TRUE)
gsub("[:]", "", gross.elec[  ,7])
gsub("[[:blank:]]", "", gross.elec[  ,7])
gross.elec[  ,7]
as.vector(gross.elec[  ,7]
)
gsub("[:]", "NA", as.vector(gross.elec[  ,7]))
gsub("[[:blank:]]", "", gross.elec[  1,7])
gsub("[[:blank:]]", "", gross.elec[  1:3,7])
as.numeric(gsub("[[:blank:]]", "", gross.elec[  1:3,7]))
as.numeric(gsub(" ", "", gross.elec[  1:3,7]))
as.numeric(gross.elec[  1:3,7])
as.numeric(gsub(" ", "", as.character(gross.elec[  1:3,7])))
as.numeric(gsub(" ", "", unlist(gross.elec[  1:3,7])))
gsub(" ", "", unlist(gross.elec[  ,7]))
as.numeric(gsub(" ", "", unlist(gross.elec[  ,7])))
gross.elec <- read_csv("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/Eurostat_Spain_2018_nrg_bal_c/nrg_bal_c_3_Data.csv", col_names = TRUE, col_types = 'cccccccc', trim_ws = TRUE)
gross.elec [ ,7] <- as.numeric(gsub(" ", "", unlist(gross.elec[  ,7])))
gross.elec <- read_csv("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/Eurostat_Spain_2018_nrg_bal_c/nrg_bal_c_3_Data.csv", col_names = TRUE, col_types = 'cccccccc', trim_ws = TRUE)
gross.elec [ ,7] <- as.double(gsub(" ", "", unlist(gross.elec[  ,7])))
gross.elec[1:3,7]
gross.elec <- read_csv("~/Documents/NYC_DSA/Project1_ShinyViz/energia_solar_ayunto/Eurostat_Spain_2018_nrg_bal_c/nrg_bal_c_3_Data.csv", col_names = TRUE, col_types = 'cccccccc', trim_ws = TRUE)
gross.elec [ ,7] <- as.numeric(gsub(" ", "", unlist(gross.elec[  ,7])))
gross.elec[1:3,7]
solarrad.month <-
# inso h
# n_des
# glo KJ/m2
c("fecha" : "2019-1", "indicativo" : "3129", "p_max" : "7.4(31)", "n_cub" : "3.0", "glo" : "29970.0", "hr" : "64.0", "n_gra" : "0.0", "n_fog" : "0.0", "inso" : "6.7", "q_max" : "965.7(05)", "nw_55" : "3.0", "q_mar" : "1021.9", "q_med" : "952.2", "tm_min" : "-1.4", "ta_max" : "16.3(24)", "ts_min" : "7.8", "nt_30" : "0.0", "nv_0050" : "0.0", "n_des" : "16.0", "w_racha" : "22/21.7(31)", "np_100" : "0.0", "n_nub" : "12.0", "p_sol" : "70.0", "nw_91" : "0.0", "np_001" : "4.0", "ta_min" : "-5.7(06)", "w_rec" : "239.0", "e" : "59.0", "np_300" : "0.0", "nv_1000" : "0.0", "p_mes" : "18.2", "n_llu" : "4.0", "n_tor" : "0.0", "w_med" : "11.0", "nt_00" : "22.0", "ti_max" : "5.1", "n_nie" : "0.0", "tm_mes" : "5.7", "tm_max" : "12.7", "nv_0100" : "0.0", "q_min" : "929.2(31)", "np_010" : "3.0")
solarrad.month <-
# inso h
# n_des
# glo KJ/m2
c("fecha" : "2019-1", "indicativo" : "3129", "p_max" : "7.4(31)", "n_cub" : "3.0", "glo" : "29970.0", "hr" : "64.0", "n_gra" : "0.0", "n_fog" : "0.0", "inso" : "6.7", "q_max" : "965.7(05)", "nw_55" : "3.0", "q_mar" : "1021.9", "q_med" : "952.2", "tm_min" : "-1.4", "ta_max" : "16.3(24)", "ts_min" : "7.8", "nt_30" : "0.0", "nv_0050" : "0.0", "n_des" : "16.0", "w_racha" : "22/21.7(31)", "np_100" : "0.0", "n_nub" : "12.0", "p_sol" : "70.0", "nw_91" : "0.0", "np_001" : "4.0", "ta_min" : "-5.7(06)", "w_rec" : "239.0", "e" : "59.0", "np_300" : "0.0", "nv_1000" : "0.0", "p_mes" : "18.2", "n_llu" : "4.0", "n_tor" : "0.0", "w_med" : "11.0", "nt_00" : "22.0", "ti_max" : "5.1", "n_nie" : "0.0", "tm_mes" : "5.7", "tm_max" : "12.7", "nv_0100" : "0.0", "q_min" : "929.2(31)", "np_010" : "3.0")
c("fecha" : "2019-1", "indicativo" : "3129", "p_max" : "7.4(31)", "n_cub" : "3.0", "glo" : "29970.0", "hr" : "64.0", "n_gra" : "0.0", "n_fog" : "0.0", "inso" : "6.7", "q_max" : "965.7(05)", "nw_55" : "3.0", "q_mar" : "1021.9", "q_med" : "952.2", "tm_min" : "-1.4", "ta_max" : "16.3(24)", "ts_min" : "7.8", "nt_30" : "0.0", "nv_0050" : "0.0", "n_des" : "16.0", "w_racha" : "22/21.7(31)", "np_100" : "0.0", "n_nub" : "12.0", "p_sol" : "70.0", "nw_91" : "0.0", "np_001" : "4.0", "ta_min" : "-5.7(06)", "w_rec" : "239.0", "e" : "59.0", "np_300" : "0.0", "nv_1000" : "0.0", "p_mes" : "18.2", "n_llu" : "4.0", "n_tor" : "0.0", "w_med" : "11.0", "nt_00" : "22.0", "ti_max" : "5.1", "n_nie" : "0.0", "tm_mes" : "5.7", "tm_max" : "12.7", "nv_0100" : "0.0", "q_min" : "929.2(31)", "np_010" : "3.0")
solarrad.month <-
# inso h
# n_des
# glo KJ/m2
c(""fecha" : "2019-1", "indicativo" : "3129", "p_max" : "7.4(31)", "n_cub" : "3.0", "glo" : "29970.0", "hr" : "64.0", "n_gra" : "0.0", "n_fog" : "0.0", "inso" : "6.7", "q_max" : "965.7(05)", "nw_55" : "3.0", "q_mar" : "1021.9", "q_med" : "952.2", "tm_min" : "-1.4", "ta_max" : "16.3(24)", "ts_min" : "7.8", "nt_30" : "0.0", "nv_0050" : "0.0", "n_des" : "16.0", "w_racha" : "22/21.7(31)", "np_100" : "0.0", "n_nub" : "12.0", "p_sol" : "70.0", "nw_91" : "0.0", "np_001" : "4.0", "ta_min" : "-5.7(06)", "w_rec" : "239.0", "e" : "59.0", "np_300" : "0.0", "nv_1000" : "0.0", "p_mes" : "18.2", "n_llu" : "4.0", "n_tor" : "0.0", "w_med" : "11.0", "nt_00" : "22.0", "ti_max" : "5.1", "n_nie" : "0.0", "tm_mes" : "5.7", "tm_max" : "12.7", "nv_0100" : "0.0", "q_min" : "929.2(31)", "np_010" : "3.0"")
c(""fecha" : "2019-1", "indicativo" : "3129", "p_max" : "7.4(31)", "n_cub" : "3.0", "glo" : "29970.0", "hr" : "64.0", "n_gra" : "0.0", "n_fog" : "0.0", "inso" : "6.7", "q_max" : "965.7(05)", "nw_55" : "3.0", "q_mar" : "1021.9", "q_med" : "952.2", "tm_min" : "-1.4", "ta_max" : "16.3(24)", "ts_min" : "7.8", "nt_30" : "0.0", "nv_0050" : "0.0", "n_des" : "16.0", "w_racha" : "22/21.7(31)", "np_100" : "0.0", "n_nub" : "12.0", "p_sol" : "70.0", "nw_91" : "0.0", "np_001" : "4.0", "ta_min" : "-5.7(06)", "w_rec" : "239.0", "e" : "59.0", "np_300" : "0.0", "nv_1000" : "0.0", "p_mes" : "18.2", "n_llu" : "4.0", "n_tor" : "0.0", "w_med" : "11.0", "nt_00" : "22.0", "ti_max" : "5.1", "n_nie" : "0.0", "tm_mes" : "5.7", "tm_max" : "12.7", "nv_0100" : "0.0", "q_min" : "929.2(31)", "np_010" : "3.0"")
c("fecha" : "2019-1", "indicativo" : "3129", "p_max" : "7.4(31)", "n_cub" : "3.0", "glo" : "29970.0", "hr" : "64.0", "n_gra" : "0.0", "n_fog" : "0.0", "inso" : "6.7", "q_max" : "965.7(05)", "nw_55" : "3.0", "q_mar" : "1021.9", "q_med" : "952.2", "tm_min" : "-1.4", "ta_max" : "16.3(24)", "ts_min" : "7.8", "nt_30" : "0.0", "nv_0050" : "0.0", "n_des" : "16.0", "w_racha" : "22/21.7(31)", "np_100" : "0.0", "n_nub" : "12.0", "p_sol" : "70.0", "nw_91" : "0.0", "np_001" : "4.0", "ta_min" : "-5.7(06)", "w_rec" : "239.0", "e" : "59.0", "np_300" : "0.0", "nv_1000" : "0.0", "p_mes" : "18.2", "n_llu" : "4.0", "n_tor" : "0.0", "w_med" : "11.0", "nt_00" : "22.0", "ti_max" : "5.1", "n_nie" : "0.0", "tm_mes" : "5.7", "tm_max" : "12.7", "nv_0100" : "0.0", "q_min" : "929.2(31)", "np_010" : "3.0")
c("fecha" : "2019-1")
c("fecha" , "2019-1")
solarrad.month <-
meterol <- read_csv("~/Documents/NYC_DSA/Project1_ShinyViz/data/meterological_data_madrid_barajas_NOPARENTHESES_2019-01_2020_03.csv", col_names = F, col_types = 'cccccccc', trim_ws = TRUE)
solarrad.month <-
meterol <- read_csv("~/Documents/NYC_DSA/Project1_ShinyViz/data/meterological_data_madrid_barajas_NOPARENTHESES_2019-01_2020_03.csv", col_names = F, trim_ws = TRUE)
meterol <- read_csv("~/Documents/NYC_DSA/Project1_ShinyViz/data/meterological_data_madrid_barajas_NOPARENTHESES_2019-01_2020_03.csv", col_names = F, trim_ws = TRUE)
problems(meterol)
meterol <- read_csv("~/Documents/NYC_DSA/Project1_ShinyViz/data/meterological_data_madrid_barajas_NOPARENTHESES_2019-01_2020_03.csv", col_names = F, trim_ws = TRUE)
problems(meterol)
meterol <- read_csv("~/Documents/NYC_DSA/Project1_ShinyViz/data/meterological_data_madrid_barajas_NOPARENTHESES_2019-01_2020_03.csv", col_names = F, trim_ws = TRUE)
spec(meterol)
seq(3,84,2)
meterol[1, seq(3,84,2)]
meterol[1, c(1, 2, seq(3,84,2))]
meterol.names <- meterol[1, c(1, 2, seq(3,84,2))]
seq(1,84,2)
seq(2,84,2)
meterol2 <- meterol[, -seq(1,84,2)]
colnames(meterol2) <- meterol.names
meterol.names <- meterol[1, c(1, seq(3,84,2))]
meterol2 <- meterol[, -seq(1,84,2)]
colnames(meterol2) <- meterol.names
t(meterol2)
library(data.table)
transpose(meterol2)
meterol2.t<- transpose(meterol2)
colnames(meterol2.t) <- rownames(meterol2)
rownames(meterol2.t) <- colnames(meterol2)
meterol2.t
library(shiny)
runApp('Documents/NYC_DSA/Project1_ShinyViz/Project1_ShinyViz')
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
library(Hmisc)
library(pastecs)
# univariate EDA of test ####
summary(temp)
describe(temp)
stat.desc(temp)
# bivariate EDA of test ####
cor.test(temp[,1], temp[,3])
# univariate graphical EDA ####
# distributions
library (tidyverse)
temp.g<- ggplot(data = temp)
temp.g + geom_bar(aes(x = Body.Temp))
temp.g + geom_bar(aes(x = Gender))
temp.g +  geom_bar(aes(x = Heart.Rate))
# OR:
temp.g + geom_histogram(aes(x = Body.Temp), binwidth = 0.1)
temp.g + geom_histogram(aes(x = Heart.Rate), binwidth = 1)
# bivariate graphical EDA ####
temp.g + geom_point(aes(x = Body.Temp, y = Heart.Rate)) + geom_smooth(aes(x = Body.Temp, y = Heart.Rate), method = lm)
# One sample T-test
# null hypothesis: test population supports claim that average temperature is 98.6
t.statistic = (mean(temp$Body.Temp) - 98.6)/(sd(temp$Body.Temp)/sqrt(100))
pt(q = t.statistic, df = 99, lower.tail = FALSE)
#OR:
t.test(temp$Body.Temp, mu = 98.6, alternative = "greater")
# p-value > 0.05, accept null hypothesis. Temperature data supports average body temperature of 98.6
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
library(Hmisc)
library(pastecs)
# univariate EDA of test ####
summary(temp)
describe(temp)
stat.desc(temp)
# bivariate EDA of test ####
cor.test(temp[,1], temp[,3])
# univariate graphical EDA ####
# distributions
library (tidyverse)
temp.g<- ggplot(data = temp)
temp.g + geom_bar(aes(x = Body.Temp))
temp.g + geom_bar(aes(x = Gender))
temp.g +  geom_bar(aes(x = Heart.Rate))
# OR:
temp.g + geom_histogram(aes(x = Body.Temp), binwidth = 0.1)
temp.g + geom_histogram(aes(x = Heart.Rate), binwidth = 1)
# bivariate graphical EDA ####
temp.g + geom_point(aes(x = Body.Temp, y = Heart.Rate)) + geom_smooth(aes(x = Body.Temp, y = Heart.Rate), method = lm)
# One sample T-test
# null hypothesis: test population supports claim that average temperature is 98.6
t.statistic = (mean(temp$Body.Temp) - 98.6)/(sd(temp$Body.Temp)/sqrt(100))
pt(q = t.statistic, df = 99, lower.tail = FALSE)
#OR:
t.test(temp$Body.Temp, mu = 98.6, alternative = "greater")
# p-value > 0.05, accept null hypothesis. Temperature data supports average body temperature of 98.6
# 2-sample T test
library(tidyverse)
temp.g + geom_density(aes(Body.Temp))
temp.g + geom_density(aes(Body.Temp, color = "red"))
temp.g + geom_density(aes(Body.Temp, Heart.Rate))
temp.g + geom_density(aes(Body.Temp, color = "red")) +geom_density(aes(Heart.Rate, color = "blue"))
# 2-sample T test
male <- filter(temp, Gender == "Male") %>% select(temp, Body.Temp)
# 2-sample T test
male <- filter(temp, Gender == "Male"))
# 2-sample T test
male <- filter(temp, Gender == "Male")
female <- filter(temp, Gender == "Female")
ggplot() + geom_density(data= female, aes(Body.Temp, color = "red")) + geom_density(date = mele, aes(Body.Temp, color = "blue"))
ggplot() + geom_density(data= female, aes(Body.Temp, color = "red")) + geom_density(date = male, aes(Body.Temp, color = "blue"))
ggplot() + geom_density(data = female, aes(Body.Temp, color = "red"))
# temp.g <- ggplot(data = temp)
ggplot() + geom_density(data = female, aes(Body.Temp, color = "red")) + geom_density(data = male, aes(Body.Temp, color = "blue"))
# temp.g <- ggplot(data = temp)
ggplot() + geom_density(data = female, aes(Body.Temp)) + geom_density(data = male, aes(Body.Temp))
# temp.g <- ggplot(data = temp)
ggplot() + geom_density(data = female, aes(Body.Temp, color = "red")) + geom_density(data = male, aes(Body.Temp, color = "blue"))
vignette("ggplot2-specs")
ggplot(temp) + geom_density(aes(Body.Temp, group = Gender))
ggplot(temp) + geom_density(aes(Body.Temp, group = Gender, color = Gender))
ggplot(temp) + geom_boxplot(aes(Body.Temp, group = Gender, color = Gender))
ggplot(temp) + geom_violin(aes(Body.Temp, group = Gender, color = Gender))
# 2-sample T test
t.test(subset(temp, Gender == "Male", Body.Temp), subset(temp, Gender == "Female", Body.Temp), alternative = "two.sided")
# Distribution of body temp based on gender
ggplot(temp) + geom_density(aes(Heart.Rate, group = Gender, color = Gender))
ggplot(temp) + geom_boxplot(aes(Heart.Rate, group = Gender, color = Gender))
# 2-sample T test
t.test(subset(temp, Gender == "Male", Heart.Rate), subset(temp, Gender == "Female", Heart.Rate), alternative = "two.sided")
ggplot(temp) + geom_boxplot(aes(Heart.Rate, group = Gender, color = Gender))
ggplot(temp) + geom_boxplot(aes(Body.Temp, group = Gender, color = Gender))
# F-test
var.test(subset(temp, Gender == "Male", Heart.Rate), subset(temp, Gender == "Female", Heart.Rate), alternative = "two.sided")
# F-test
library(stats)
var.test(subset(temp, Gender == "Male", Heart.Rate), subset(temp, Gender == "Female", Heart.Rate), alternative = "two.sided")
subset(temp, Gender == "Male", Heart.Rate)
unlist(subset(temp, Gender == "Male", Heart.Rate))
# F-test
var.test(unlist(subset(temp, Gender == "Male", Heart.Rate)), unlist(subset(temp, Gender == "Female", Heart.Rate)), alternative = "two.sided")
ggplot(temp) + geom_boxplot(aes(Heart.Rate, group = Gender, color = Gender))
var(subset(temp, Gender == "Male", Heart.Rate))
# 34.51779
var(subset(temp, Gender == "Female", Heart.Rate))
ggplot(temp) + geom_boxplot(aes(Heart.Rate, group = Gender, color = Gender))
datasets(PlantGrowth)
dataset(PlantGrowth)
library(datasets)
datasets(PlantGrowth)
data(PlantGrowth)
force(PlantGrowth)
ggplot(PlantGrowth) + geom_boxplot(aes(weight, group = group, color = group))
bartlett.test(ctrl ~ trt1 ~ trt2, data = PlantGrowth)
bartlett.test(ctrl ~ trt1, data = PlantGrowth)
bartlett.test(subset(Plant.Growth, group == "ctrl", weight), subset(Plant.Growth, group == "trt1", weight), data = PlantGrowth)
bartlett.test(subset(PlantGrowth, group == "ctrl", weight), subset(PlantGrowth, group == "trt1", weight), data = PlantGrowth)
data("InsectSprays")
force(InsectSprays)
bartlett.test(weight ~ group, data = PlantGrowth)
# One-Way ANOVA
aov(PlantGrowth ~ group)
set.seed(0)
Low.Calorie = rnorm(200, 10, 1) #Randomly generating weight loss measurements
Low.Carb = rnorm(200, 8.5, 1)   #for various diet types.
Low.Fat = rnorm(200, 8, 1)
Control = rnorm(200, 0, 1)
Weight.Loss = c(Low.Calorie, Low.Carb, Low.Fat, Control) #Combining data into
Category = c(rep("Low Calorie", 200),                    #different consolidated
rep("Low Carb", 200),                       #vectors.
rep("Low Fat", 200),
rep("Control", 200))
# One-Way ANOVA
aov(PlantGrowth$weight ~ PlantGrowth$group)
# One-Way ANOVA
summary(aov(PlantGrowth$weight ~ PlantGrowth$group))
data("HairEyeColor")
force(HairEyeColor)
View(male)
str(HairEyeColor)
HairEyeColor[[1]]
HairEyeColor[[2]]
mosaicplot(HairEyeColor, shade = TRUE)
dim(HairEyeColor)
HairEyeColor[1,,]
HairEyeColor[2,,]
HairEyeColor[3,,]
HairEyeColor[,1,]
HairEyeColor[,,1]
HairEyeColor[,1,1]
females <- HairEyeColor[ , , "Female"]
females
females <- HairEyeColor[ ,1:2 , "Female"]
females
mosaicplot(females, shade = TRUE)
chisq.test(females)
mosaicplot(females, shade = TRUE)
apply(females, 1, t.test)
apply(females, 2, t.test)
apply(females, 2, t.test)
summary(apply(females, 2, aov))
apply(females, 2, aov)
summary(aov(females$Brown ~ females$Blue))
females$Brown
females[,,1]
dim(females)
summary(aov(females[,1] ~ females[,2]))
stat.desc(temp)
cor.test(temp[,1], temp[,3])
hist(temp$Body.Temp, prob = T)
hist(temp$Body.Temp, prob = T)
temp.g + geom_bar(aes(x = Body.Temp))
temp.g + geom_bar(aes(x = Body.Temp))
t.test(temp$Body.Temp, mu = 98.6, alternative = "greater")
t.test(temp$Body.Temp, mu = 98.6, alternative = "two.sided")
t.test(temp$Body.Temp, mu = 98.6, alternative = "greater")
t.test(temp$Body.Temp, mu = 98.6, alternative = "two.sided")
# 2-sample T test
t.test(subset(temp, Gender == "Male", Body.Temp), subset(temp, Gender == "Female", Body.Temp), alternative = "two.sided")
library(dplyr)
Ma = temp %>% filter(Gender == 'Male')
Fe = temp %>% filter(Gender == 'Female')
avg = numeric()
for(i in 1:10000){
m = sample(Ma$Body.Temp, 65, replace=T)
f = sample(Fe$Body.Temp, 65, replace=T)
avg[i] = mean(f-m)
}
lower_bnd = mean(avg) - 2*sd(avg)
upper_bnd = mean(avg) + 2*sd(avg)
# F-test
var.test(unlist(subset(temp, Gender == "Male", Heart.Rate)), unlist(subset(temp, Gender == "Female", Heart.Rate)), alternative = "less")
var.test(unlist(subset(temp, Gender == "Male", Heart.Rate)), unlist(subset(temp, Gender == "Female", Heart.Rate)), alternative = "less")
#
var.test(temp$Heart.Rate[temp$Gender == "Female"],
temp$Heart.Rate[temp$Gender == "Male"],
alternative = "less")
t.test(subset(temp, Gender == "Male", Body.Temp), subset(temp, Gender == "Female", Body.Temp), alternative = "two.sided")
t.test(temp$Body.Temp ~ temp$Gender, alternative = "two.sided")
summary(aov(weight ~ group, data = PlantGrowth))
(reduced.test$observed - reduced.test$expected)^2/reduced.test$expected
reduced.test <- chisq.test(females)
(reduced.test$observed - reduced.test$expected)^2/reduced.test$expected
reduced.test$observed
reduced.test$expected
(reduced.test$observed - reduced.test$expected)^2/reduced.test$expected
reduced.test$observed - reduced.test$expected
reduced.test
shiny::runApp('Documents/NYC_DSA/Project1_ShinyViz/Project1_ShinyViz')
setwd("~/Documents/NYC_DSA/Project1_ShinyViz/ShinyViz")
runApp()
runApp()
runApp()
runApp()
runApp()
